"use strict";let series=[],seriesFavs=[],seriesList=document.querySelector(".js-series-list");const seriesFavourites=document.querySelector(".js-favs"),input=document.querySelector(".js-input"),btn=document.querySelector(".js-btn"),resetBtn=document.querySelector(".js-btn-delete"),deleteIcon=document.querySelector(".js-icon");let results=document.querySelector(".js-results");const form=document.querySelector(".js-submit");function handleGetInfoSeries(){getApi()}function paintSeries(){results.innerHTML="<Número de series que coinciden: "+series.length;let e="",s="";for(const t of series){s=isFav(t)?"color-fav":"";const i=t.show.name;let n=t.show.image,r="https://via.placeholder.com/210x295/ffffff/666666/?text=TV";n=null===n?r:t.show.image.medium;let o=t.show.premiered;null===o&&(o="No se ha estrenado todavía."),e+=`<li class="list--li js-serieBox ${s}" id="${t.show.id}">`,e+=`<img src="${n}" class="serie-img"/>`,e+=`<div class="premiere"> ${o}</div>`,e+=`<h3 class="serie-title">${i}</h3>`,e+="</li>"}seriesList.innerHTML=e,listenSerie()}function preventBtn(e){e.preventDefault()}function handleForm(e){e.preventDefault()}function handleClickEv(e){const s=parseInt(e.currentTarget.id),t=series.find(e=>e.show.id===s),i=seriesFavs.findIndex(e=>e.show.id===s);-1===i?seriesFavs.push(t):seriesFavs.splice(i,1),paintFavs(),paintSeries(),setLocalStorage()}function listenSerie(){const e=document.querySelectorAll(".js-serieBox");for(const s of e)s.addEventListener("click",handleClickEv)}function paintFavs(){seriesFavourites.innerHTML="";let e="";for(const s of seriesFavs){let t=s.show.name,i=s.show.id,n=s.show.image,r="https://via.placeholder.com/210x295/ffffff/666666/?text=TV";n=null===n?r:s.show.image.medium,e+=`<li class="li--fav js-serieBox" id="${i}">`,e+=`<img src="${n}" class="img-fav" />`,e+=`<h3 class="serie-title">${t}</h3>`,e+=`<button  id="${i}" class="js-delete-btn delete-btn">X</button>`,e+="</li>"}seriesFavourites.innerHTML+='<li class="title-fav">Series favoritas: </li>',seriesFavourites.innerHTML+=e}function isFav(e){return void 0!==seriesFavs.find(s=>s.show.id===e.show.id)}function deleteFavSerie(){const e=document.querySelectorAll(".js-delete-btn");for(const s of e)s.addEventListener("click",deleteFavorite)}function deleteFavorite(e){const s=parseInt(e.currentTarget.id),t=seriesFavs.findIndex(e=>e.show.id===s);-1!==t&&seriesFavs.splice(t,1),paintFavs(),paintSeries()}function deleteAllFavs(){seriesFavs=[],paintFavs(),localStorage.clear()}function setLocalStorage(){const e=JSON.stringify(seriesFavs);localStorage.setItem("seriesFavs",e)}function getApi(){const e=input.value;fetch("https://api.tvmaze.com/search/shows?q="+e).then(e=>e.json()).then(e=>{series=e,paintSeries(),setLocalStorage()})}function getLocalStorage(){const e=localStorage.getItem("seriesFavs");if(null===e)getApi();else{const s=JSON.parse(e);seriesFavs=s,paintFavs(),deleteFavSerie()}}function handleClickResetBtn(){location.reload()}btn.addEventListener("click",handleGetInfoSeries),btn.addEventListener("click",preventBtn),form.addEventListener("submit",handleForm),deleteIcon.addEventListener("click",deleteAllFavs),getLocalStorage(),resetBtn.addEventListener("click",handleClickResetBtn);